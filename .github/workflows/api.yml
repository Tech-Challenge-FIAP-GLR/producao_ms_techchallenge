name: Docker Image CI

on:
  push:
    branches: [ "master" ]
#env:
#  ECR_REPOSITORY: techchallenge
#  EKS_CLUSTER_NAME: module-eks-Ieisn
#  AWS_REGION: us-east-2

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'adopt'

    - name: Set up the Maven dependencies caching
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Install Maven dependencies
      working-directory: ./producao_ms_techchallenge
      run: mvn install
    
    - name: Set short git commit SHA
      id: commit
      uses: prompt/actions-commit-hash@v2
    
#    - name: Configure AWS credentials
#      uses: aws-actions/configure-aws-credentials@v1
#      with:
#        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        aws-region: ${{ secrets.AWS_REGION }}
#
#    - name: Login to Amazon ECR
#      id: login-ecr
#      uses: aws-actions/amazon-ecr-login@v2
#
#    - name: Build, tag, and push image to Amazon ECR
#      env:
#        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#        IMAGE_TAG: "latest"
#      working-directory: ./food_techchallenge
#      run: |
#        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f docker/Dockerfile .
#        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    
    - name: Install kubectl
      run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

#    - name: Configure AWS credentials
#      uses: aws-actions/configure-aws-credentials@v1
#      with:
#        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        aws-region: ${{ secrets.AWS_REGION }}
#
#    - name: Update kube config
#      run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION
#
#    - name: Deploy to EKS
#      env:
#        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#        IMAGE_TAG: ${{ steps.commit.outputs.short }}
#      working-directory: ./food_techchallenge
#      run: |
#        sed -i.bak "s|DOCKER_IMAGE|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" manifests/food_techchallenge-deployment.yaml && \
#        kubectl apply -f https://raw.githubusercontent.com/Tech-Challenge-FIAP-GLR/food_techchallenge/master/food_techchallenge/manifests/food_techchallenge-deployment.yaml --validate=false
#        kubectl apply -f https://raw.githubusercontent.com/Tech-Challenge-FIAP-GLR/food_techchallenge/master/food_techchallenge/manifests/food_techchallenge-svc.yaml --validate=false
#        kubectl apply -f https://raw.githubusercontent.com/Tech-Challenge-FIAP-GLR/food_techchallenge/master/food_techchallenge/manifests/food_techchallenge-hpa.yaml --validate=false
#        kubectl get pods
#        kubectl get svc
